name: 🍒 Upload and Release Python Package

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  contents: write
  packages: write

env:
  PROJECT_NAME: ytb2audiobot
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  DOCKERHUB_USERNAME: andrewlevin
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}


jobs:
  pypi_package:
    runs-on: ubuntu-latest  
    steps:
    - name: 🍊 😺 Checkout repository
      uses: actions/checkout@v4
    
    - name: 🥝 😺 Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: 🐍 🔄 PyPI Upgrade
      run: python -m pip install --upgrade pip

    - name: 🐍 ⬇️ 🦅 PyPI. VersionHawk Install
      run: pip install versionhawk

    #- name: 🕰️ 🔢 Version DateTimeStamp
    #  run: echo "VERSION=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: 🦅 🔢 VersionHawk. Get a New version
      run: |
        echo "VERSION=$(versionhawk ${PROJECT_NAME})" >> $GITHUB_ENV

    # Default 0.0.0.0.0.0.0.0.1 - to have 404 PEP
    - name: 🔫 🔢  Sed Version to PROJECT.TOML
      run: |
        sed -i "s/0.0.0.0.0.0.0.0.1/${VERSION}/g" pyproject.toml

    - name: 🐍 ⬇️ Python. Install dependencies
      run: pip install build

    - name: 🐍 🏗️ Python. Build package
      run: python -m build

  github_release:
    needs: pypi_package
    runs-on: ubuntu-latest  
    steps:
    - name: 🍊 😺 Checkout repository
      uses: actions/checkout@v4
    - name: 😺 💾 🚀 Github. Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: false
  
  pypi_release:
    needs: github_release
    runs-on: ubuntu-latest  
    steps:
    - name: 🍊 😺 Checkout repository
      uses: actions/checkout@v4
    - name: 🐍 💾 🚀 Python PyPI. Publish package
      if: steps.create_release.outputs.upload_url != ''
      uses: pypa/gh-action-pypi-publish@v1.8.6
      with:
        user: __token__
        password: ${{ env.PYPI_API_TOKEN }}
  
  docker:
    needs: pypi_release
    runs-on: ubuntu-latest  
    steps:
    - name: 🍊 😺 Checkout repository
      uses: actions/checkout@v4
    - name: 🐳 🔑 Docker. Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: 🐳 🏗️ Docker. Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🐳 💾 🚀 Docker. Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:latest
        platforms: linux/arm64,linux/amd64
   
  result:
    needs: docker
    runs-on: ubuntu-latest  
    steps: 
    - name: 💚 Success. Show Results. 💚
      run: |
        echo -e "💚 🐍 \t https://pypi.org/project/${PROJECT_NAME}/#history"
        echo -e "💚 🐳 \t https://hub.docker.com/r/${DOCKERHUB_USERNAME}/${PROJECT_NAME}/tags"
        
            
        






      
