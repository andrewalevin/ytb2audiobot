import unittest

from src.ytb2audiobot.ytb2audiobot_asynced import get_command_params_of_request2 as parser


TESTS = [
    [
        'youtu.be/8jn9ah_aprE',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': '',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE bitr',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'bitrate',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE bitr 96',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'bitrate',
            'params': ['96']
        }
    ],[
        'youtu.be/8jn9ah_aprE bitr 96 one two three',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'bitrate',
            'params': ['96', 'one']
        }
    ],[
        'youtu.be/8jn9ah_aprE split',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'split',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE spl',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'split',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE sp',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'split',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE split 320',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'split',
            'params': ['320']
        }
    ],[
        'youtu.be/8jn9ah_aprE split 300 additional text and what to du',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'split',
            'params': ['300', 'additional']
        }
    ],[
        'youtu.be/8jn9ah_aprE bitr 96 one two three',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'bitrate',
            'params': ['96', 'one']
        }
    ],[
        '–ù–∞—á–∏–Ω–∞—è —Å –†—É—Å—Å–æ –∏ –ö–∞–Ω—Ç–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∏ –¥–≤–µ —à–∫–æ- –ª—ã –ª–∏–±–µ—Ä–∞–ª–∏–∑–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫ —Ç–≤–µ—Ä–¥–æ–ª–æ–±—ã—Ö –∏ –º—è–≥–∫–æ—Å–µ—Ä–¥–µ—á–Ω—ã—Ö. '
        '–¢–≤–µ—Ä–¥–æ–ª–æ–±–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ë–µ–Ω—Ç–∞–º–∞, –†–∏–∫–∞—Ä–¥–æ –∏ –ú–∞—Ä–∫—Å–∞ –ª–æ–≥–∏—á–Ω–æ –ø–æ–¥–≤–µ–ª–æ –∫ –°—Ç–∞–ª–∏–Ω—É; '
        '–º—è–≥–∫–æ—Å–µ—Ä–¥–µ—á- –Ω–æ–µ —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞–¥–∏–∏ –ø–µ—Ä–µ—à–ª–æ —á–µ—Ä–µ–∑ –§–∏—Ö—Ç–µ, –ë–∞–∏ÃÜ—Ä–æ–Ω–∞, –ö–∞—Ä–ª–µ–∏ÃÜ–ª—è –∏ –ù–∏—Ü—à–µ –∫ –ì–∏—Ç–ª–µ—Ä—É.'
        ' youtu.be/8jn9ah_aprE bitr 96 one two three –¢–≤–µ—Ä–¥–æ–ª–æ–±–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ë–µ–Ω—Ç–∞–º–∞, –†–∏–∫–∞—Ä–¥–æ –∏ –ú–∞—Ä–∫—Å–∞ –ª–æ–≥–∏—á–Ω–æ –ø–æ–¥–≤–µ–ª–æ –∫ –°—Ç–∞–ª–∏–Ω—É;',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': False,
            'command': '',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE subtitles',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'subtitles',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE subt',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'subtitles',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE subs',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'subtitles',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE sub',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'subtitles',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE subs',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'subtitles',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE subs –º–æ—Å—Ç',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'subtitles',
            'params': ['–º–æ—Å—Ç']
        }
    ],[
        'youtu.be/8jn9ah_aprE subs –ø–æ–¥–≤–µ—Å–Ω–æ–π –º–æ—Å—Ç',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'subtitles',
            'params': ['–ø–æ–¥–≤–µ—Å–Ω–æ–π', '–º–æ—Å—Ç']
        }
    ],[
        'youtu.be/8jn9ah_aprE download',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'download',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE down',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'download',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE dow',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'download',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE d',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'download',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE —Å–∫–∞—á–∞—Ç—å',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'download',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE —Å–∫–∞—á',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'download',
            'params': []
        }
    ],[
        'youtu.be/8jn9ah_aprE bot',
        {
            'url': 'youtu.be/8jn9ah_aprE',
            'url_started': True,
            'command': 'download',
            'params': []
        }
    ],



]


class TestRequestParser(unittest.TestCase):

    def test_parser(self):
        for test in TESTS:
            print('üíß', test[0])
            self.assertEqual(parser(test[0]), test[1])
            print()


if __name__ == '__main__':
    unittest.main()
